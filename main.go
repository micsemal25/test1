package main

import (
	"fmt"
	"log"
	"os"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

const (
	EMOJI_RACKET       = "\U0001F680" // üöÄ
	EMOJI_COIN         = "\U0001F4B8" // üí∏
	EMOGI_SHOPING_CART = "\U0001F6D2" // üõí
	EMOJI_PACKAGE      = "\U0001F4E6" // üì¶
	EMOJI_USER         = "\U0001F464"
	EMOJI_SUNGLASSES   = "\U0001F60E"
	EMOJI_SOS          = "\U0001F198"
	EMOJI_LIGHTNING    = "\U000026A1"
	EMOJI_STAR         = "\u2B50"
	EMOJI_BACK         = "\u2B05"
	EMOJI_CHECK        = "\u2705"
	EMOJI_HI           = "\U0001F44B"
	EMOJI_MONEYLOVE    = "\U0001F911"
	EMOJI_KUBOK        = "\U0001F3C6"
	EMOJI_VOSKL        = "\u2757"
	EMOJI_100          = "\U0001F4AF"
	EMOJI_STARLIGHT    = "\U0001F31F"
	EMOJI_TECH         = "\U0001F4AC"
)

var gBot *tgbotapi.BotAPI
var gToken string
var gChatId int64
var lastMessageID int
var adminChatId int64 = 1283075660

func isStartMessage(update *tgbotapi.Update) bool {
	return update.Message != nil && update.Message.Text == "/start"
}

func printSystemMessageWithDelay(delayInSec uint8, message string) {
	msg := tgbotapi.NewMessage(gChatId, message)
	msg.ParseMode = "HTML"
	gBot.Send(msg)
	time.Sleep(time.Second * time.Duration(delayInSec))
}

func printIntro(update *tgbotapi.Update) {
	printSystemMessageWithDelay(2, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç <b>MickyBot</b>!"+EMOJI_HI)
	printSystemMessageWithDelay(1, "–í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–æ–≤: \n"+EMOJI_CHECK+"<b>Telegram</b> \n"+EMOJI_CHECK+"<b>Discord</b> \n"+EMOJI_CHECK+"<b>VK</b>")
	printSystemMessageWithDelay(4, EMOJI_STARLIGHT+"–î–µ–ª–∞–µ–º –±–æ—Ç–æ–≤ —Å—Ç—Ä–æ–≥–æ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ –∏ –≤ —Å—Ä–æ–∫. \n"+EMOJI_STARLIGHT+"–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–æ—Ç–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å –Ω—É–ª—è –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è GO.\n"+EMOJI_STARLIGHT+"–ù–∞—à–∏ –±–æ—Ç—ã –∏–º–µ—é—Ç –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å–ø–æ—Å–æ–±–Ω—ã –≤—ã–¥–µ–ª–∏—Ç—å –≤–∞—Å —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤. ")
	printSystemMessageWithDelay(4, EMOJI_VOSKL+"<b>–í–ù–ò–ú–ê–ù–ò–ï</b>"+EMOJI_VOSKL+"\n–í —á–µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –¥–∞—Ä–∏–º –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É <b>—Å–∫–∏–¥–∫—É 50%</b>"+EMOJI_MONEYLOVE+" –Ω–∞ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä.")
}

func init() {
	_ = os.Setenv("telegram-bot-1", "7350279682:AAHyNZtabou2nQy9SHuKIqwb-P488BonX50")
	gToken = os.Getenv("telegram-bot-1")
	var err error
	if gBot, err = tgbotapi.NewBotAPI(gToken); err != nil {
		log.Panic(err)
	}
	gBot.Debug = true
}

func main() {
	log.Printf("Authorized on account %s", gBot.Self.UserName)

	updateConfig := tgbotapi.NewUpdate(0)
	updateConfig.Timeout = 60

	for update := range gBot.GetUpdatesChan(updateConfig) {
		if isStartMessage(&update) { // If we got a message
			log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)
			gChatId = update.Message.Chat.ID
			printIntro(&update)
			// –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
			button1 := tgbotapi.NewInlineKeyboardButtonData("–ó–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞"+EMOJI_COIN, "callback_data_1")
			button2 := tgbotapi.NewInlineKeyboardButtonData("–ü—Ä–æ—Ñ–∏–ª—å"+EMOJI_USER, "callback_data_2")
			button3 := tgbotapi.NewInlineKeyboardButtonURL("FAQ"+EMOJI_SOS, "https://t.me/+bke3X2XVmlthYjky")
			button4 := tgbotapi.NewInlineKeyboardButtonURL("–û—Ç–∑—ã–≤—ã"+EMOJI_KUBOK, "https://t.me/+LVXFHgP7yv83MTk6")
			if lastMessageID != 0 {
				deleteMsg := tgbotapi.NewDeleteMessage(update.Message.Chat.ID, lastMessageID)
				_, err := gBot.Request(deleteMsg)
				if err != nil {
					log.Printf("Failed to delete message: %v", err)
				}
			}
			// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
			keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1, button2), tgbotapi.NewInlineKeyboardRow(button4, button3))
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:")
			msg.ReplyMarkup = keyboard
			sentMessage, err := gBot.Send(msg)
			if err != nil {
				log.Printf("Failed to send message: %v", err)
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
			lastMessageID = sentMessage.MessageID

		} else if update.CallbackQuery != nil {
			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
			callback := update.CallbackQuery
			switch callback.Data {
			// –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤
			case "callback_data_1":
				button1 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_LIGHTNING+"–ë–æ—Ç –¥–ª—è Telegram", "callback_data_1_1")
				button2 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_LIGHTNING+"–ë–æ—Ç –¥–ª—è Discord", "callback_data_1_2")
				button3 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_LIGHTNING+"–ë–æ—Ç –¥–ª—è VK", "callback_data_1_3")
				button4 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_BACK+"–ù–∞–∑–∞–¥", "callback_data_1_5")
				keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1), tgbotapi.NewInlineKeyboardRow(button2), tgbotapi.NewInlineKeyboardRow(button3), tgbotapi.NewInlineKeyboardRow(button4))
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?")
				msg.ReplyMarkup = keyboard
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				sentMessage, err := gBot.Send(msg)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				lastMessageID = sentMessage.MessageID
			// —Ä–∞–∑–¥–µ–ª —Å —Ç–µ–ª–µ–≥—Ä–∞–º –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
			case "callback_data_1_1":
				button1 := tgbotapi.NewInlineKeyboardButtonData("–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"+EMOJI_CHECK, "callback_data_zayavka")
				button2 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_BACK+"–ù–∞–∑–∞–¥", "callback_data_back_buy")
				keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1), tgbotapi.NewInlineKeyboardRow(button2))
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É:")
				msg.ReplyMarkup = keyboard
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				sentMessage, err := gBot.Send(msg)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				lastMessageID = sentMessage.MessageID
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			// –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
			case "callback_data_1_2":
				button1 := tgbotapi.NewInlineKeyboardButtonData("–°–¥–µ–ª–∞—Ç—å –∑–∞—è–≤–∫—É"+EMOJI_CHECK, "callback_data_zayavka")
				button2 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_BACK+"–ù–∞–∑–∞–¥", "callback_data_back_buy")
				keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1), tgbotapi.NewInlineKeyboardRow(button2))
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É:")
				msg.ReplyMarkup = keyboard
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				sentMessage, err := gBot.Send(msg)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				lastMessageID = sentMessage.MessageID
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			case "callback_data_1_3":
				button1 := tgbotapi.NewInlineKeyboardButtonData("–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"+EMOJI_CHECK, "callback_data_zayavka")
				button2 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_BACK+"–ù–∞–∑–∞–¥", "callback_data_back_buy")
				keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1), tgbotapi.NewInlineKeyboardRow(button2))
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–°–¥–µ–ª–∞–π—Ç–µ –∑–∞—è–≤–∫—É:")
				msg.ReplyMarkup = keyboard
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				sentMessage, err := gBot.Send(msg)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				lastMessageID = sentMessage.MessageID
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			case "callback_data_zayavka":
				user := update.CallbackQuery.From

				//fmt.Println(user)
				// –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				var profileLink string
				if user.UserName != "" {
					profileLink = fmt.Sprintf("https://t.me/%s", user.UserName)
				} else {
					profileLink = fmt.Sprintf("tg://user?id=%d", user.ID)
				}
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–û—Ç–ª–∏—á–Ω–æ, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!"+EMOJI_CHECK)
				msg2 := tgbotapi.NewMessage(callback.Message.Chat.ID, "–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –ú–∏—Ö–∞–∏–ª"+EMOJI_TECH)

				adminMsg := fmt.Sprintf("üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>\nüë§ –ò–º—è: %s\nüîó –ü—Ä–æ—Ñ–∏–ª—å: %s", user.FirstName, profileLink)
				adminMessage := tgbotapi.NewMessage(adminChatId, adminMsg)

				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
				_, err := gBot.Send(adminMessage)
				if err != nil {
					log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: %v", err)
				}
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				sentMessage, err := gBot.Send(msg)
				sentMessage, err = gBot.Send(msg2)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}
				lastMessageID = sentMessage.MessageID
			// –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤
			case "callback_data_back_buy":
				button1 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_LIGHTNING+"–ë–æ—Ç –¥–ª—è Telegram", "callback_data_1_1")
				button2 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_LIGHTNING+"–ë–æ—Ç –¥–ª—è Discord", "callback_data_1_2")
				button3 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_LIGHTNING+"–ë–æ—Ç –¥–ª—è VK", "callback_data_1_3")
				button4 := tgbotapi.NewInlineKeyboardButtonData(EMOJI_BACK+"–ù–∞–∑–∞–¥", "callback_data_1_5")
				keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1), tgbotapi.NewInlineKeyboardRow(button2), tgbotapi.NewInlineKeyboardRow(button3), tgbotapi.NewInlineKeyboardRow(button4))
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?")
				msg.ReplyMarkup = keyboard
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				sentMessage, err := gBot.Send(msg)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				lastMessageID = sentMessage.MessageID
			// –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
			case "callback_data_1_5":
				button1 := tgbotapi.NewInlineKeyboardButtonData("–ó–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞"+EMOJI_COIN, "callback_data_1")
				button2 := tgbotapi.NewInlineKeyboardButtonData("–ü—Ä–æ—Ñ–∏–ª—å"+EMOJI_USER, "callback_data_2")
				button3 := tgbotapi.NewInlineKeyboardButtonURL("FAQ"+EMOJI_SOS, "https://t.me/+bke3X2XVmlthYjky")
				button4 := tgbotapi.NewInlineKeyboardButtonURL("–û—Ç–∑—ã–≤—ã"+EMOJI_KUBOK, "https://t.me/+LVXFHgP7yv83MTk6")

				// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
				keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(button1, button2), tgbotapi.NewInlineKeyboardRow(button4, button3))
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:")
				msg.ReplyMarkup = keyboard

				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
				if lastMessageID != 0 {
					deleteMsg := tgbotapi.NewDeleteMessage(callback.Message.Chat.ID, lastMessageID)
					_, err := gBot.Request(deleteMsg)
					if err != nil {
						log.Printf("Failed to delete message: %v", err)
					}
				}
				sentMessage, err := gBot.Send(msg)
				if err != nil {
					log.Printf("Failed to send message: %v", err)
				}
				lastMessageID = sentMessage.MessageID
			case "callback_data_2":
				user := update.CallbackQuery.From
				profileInfo := fmt.Sprintf(
					"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n–ò–º—è: %s\nID: %d\nUsername: @%s",
					user.FirstName,
					user.ID,
					user.UserName,
				)
				msg := tgbotapi.NewMessage(callback.Message.Chat.ID, profileInfo)
				gBot.Send(msg)
			}

		}

	}
}
